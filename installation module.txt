Step 1: Tạo thư mục module AHT Blog

Tên của module được định nghĩa thành hai phần “VendorName_ModuleName”. Phần thứ nhất là tên nhà cung cấp, phần thứ hai là tên của module: Ví dụ: Magento_Blog, AHT_OnePageCheckout. Đầu tiên chúng ta tạo các thư mục:

app/code/AHT/Blog

Step 2: Tạo file etc/module.xml.
Sau đó, cần phải tạo folder etc và thêm tập tin module.xml
nội dung :
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Module/etc/module.xsd">
	<module name="AHT_Blog" setup_version="1.0.0">
	</module>
</config>
Step 3: Thêm tập tin registration.php

Trong bước này, chúng ta sẽ thêm một tệp registration.php trong thư mục Blog với nội dung:
<?php 
\Magento\Framework\Component\ComponentRegistrar::register(
	\Magento\Framework\Component\ComponentRegistrar::MODULE,
	'AHT_Blog',
	__DIR__	
);
Step 4: Kích hoạt module

Sau bước 3 thì chúng ta đã hoàn tất việc tạo module Blog. Và giờ sẽ kích hoạt module trong bước này

Chạy lệnh:

php bin/magento module:status

Bạn sẽ thấy các module đang bị vô hiệu hóa:
 Để kích hoạt chúng, chạy lệnh:

php bin/magento module:enable AHT_Blog

Bạn cũng có thể sử dụng một cách khác để kích hoạt module, đi đến tập tin config.php :

app/etc/config.php

Bạn sẽ thấy một danh sách các module ở đó, giờ thì chỉ cần thêm module cần kích hoạt vào là xong:
Sau bước này, khi bạn mở trang web của bạn trong trình duyệt, bạn sẽ nhận được một thông báo lỗi rằng : Please upgrade your database: Run “bin/magento setup:upgrade” from the Magento root directory.

 Hãy chạy lệnh:

php bin/magento setup:upgrade

Sau khi hoàn thành, khi bạn mở trang web của mình trong trình duyệt, bạn sẽ thấy bố cục của trang web bị hỏng
Chạy lệnh:

php bin/magento setup:static-content:deploy -f

Sau khi hoàn tất, có thể nhìn thấy module vừa tạo từ backend tại System Configuration -> Advanced -> Disable Modules Output.

Step 5: Tạo tập tin routes.xml.
 Giờ chúng ta sẽ tạp một controller để kiểm tra module.

Trước ki tạo controller, ta sẽ tạo một route cho module Blog.

Route trong magento được chia làm 3 phần: Route frontname, controller và action:

http://<yourhost.com>/index.php/route_name/controller/action

route_name là tên duy nhất, được đặt trong routes.xml.

controller là thư mục nằm trong thư mục Controller.

action là một lớp với phương thức execute để xử lý request.

 Để tạo route, cần tạo tệp routes.xml

app/code/AHT/Blog/etc/frontend/routes.xml
 vì đây là một frontend route, chúng ta thêm nó vào frontend/ folder hoặc chúng ta cần thêm nó vào adminhtml/ folder

 Nội dung như sau:
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:App/etc/routes.xsd">
	<route id="standard">
		<route frontName="blog" id="blog">
			<module name="AHT_Blog"/>
		</route>
	</route>
</config>

Step 6: Tạo tệp controller
Ở bước này sẽ tiếp tục với controller và action
Thư mục và tập tin cần tạo như sau:
 app/code/AHT/Blog/Controller/Index/Test.php

 Với nội dung:
<?php
namespace AHT\Blog\Controller\Index;
/**
*
*/
class Test extends \Magento\Framework\App\Action\Action
{
	protected $_pageFactory;

	public function __construct(\Magento\Framework\App\Action\Context $context, \Magento\Framework\View\Result\PageFactory $pageFactory)
	{
		$this->_pageFactory = $pageFactory;
		return parent::__construct($context);
	}

	public function execute()
	{
		echo "AHT Blog";
		exit;
	}
}
au đó chạy lệnh:

php bin/magento cache:clean .
 

Bây giờ URL sẽ hiển thị dưới dạng:

http://<yourhost.com>/blog/index/test

 Sau khi hoàn thành tất cả các bước, đầu ra  AHT Blog sẽ hiển thị trong trình duyệt khi mở URL.
Step 7: Tạo View: Block, Layouts, Templates
Đầu tiên, ta cần tạo một controller để gọi tập tin layout .xml

File: app/code/AHT/Blog/Controller/Index/Index.php
 Nội dung như sau:
<?php
namespace AHT\Blog\Controller\Index;

class Index extends \Magento\Framework\App\Action\Action
{
	protected $_pageFactory;

	public function __construct(
		\Magento\Framework\App\Action\Context $context,
		\Magento\Framework\View\Result\PageFactory $pageFactory)
	{
		$this->_pageFactory = $pageFactory;
		return parent::__construct($context);
	}

	public function execute()
	{
		return $this->_pageFactory->create();
	}
}
 Phải khai báo PageFactory và tạo nó trong phương thức execute để hiển thị view.

 Sau đó, tạo tập tin layout .xml:

 Layout là đường dẫn chính của lớp view trong module . Tập tin layout là một tập tin XML mà sẽ xác định cấu trúc trang và sẽ được đặt trong thư mục {module_root}/view/{area}/layout/ . Đường dẫn Area có thể là  frontend hoặc adminhtml trong đó xác định nơi layout được áp dụng. Đây là một tập tin layout đặc biệt default.xml mà sẽ được áp dụng cho tất cả các trang trong khu vực đó.

 Trong khi đó, tập tin layout sẽ có tên như định dạng : {router_name}_{controller_name}_{action_name}.xml. Sau khi hiển thị trang, Magento sẽ kiểm tra tập tin layout để tìm handle cho trang và sau đó tải các Block và Template. Chúng ta sẽ tạo một tập tin xử lý layout cho module này:
File: app/code/AHT/Blog/view/frontend/layout/blog_index_index.xml

Với nội dung:
<?xml version="1.0" ?>
<page xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" layout="1column" xsi:noNamespaceSchemaLocation="urn:magento:framework:View/Layout/etc/page_configuration.xsd">
	<referenceContainer name="content">
		<block class="AHT\Blog\Block\Index" name="blog_index" template="AHT_Blog::index.phtml" />
	</referenceContainer>
</page>
Trong tập tin này, ta sẽ khai báo block và template cho trang:

Block class: AHT\Blog\Block\Index

Template file: AHT_Blog::index.phtml

name: Đây là một thuộc tính bắt buộc và được sử dụng để xác định một block như một tham chiếu

Tạo Block: Tập tin Block nên chứa tất cả các view logic được yêu cầu, không nên chứa bất kì một loại html hoặc css nào. Tập tin Block được cho là có tất cả application view logic.

Tạo một file :  app/code/AHT/Blog/Block/Index.php

Nội dung như sau:
<?php
namespace AHT\Blog\Block;

class Index extends \Magento\Framework\View\Element\Template
{
	public function __construct(\Magento\Framework\View\Element\Template\Context $context)
	{
		parent::__construct($context);
	}

	public function getBlogInfo()
	{
		return __('AHT Blog module');
	}

	public function getPosts()
	{
		$post = $this->_postFactory->create();
		$collection = $post->getCollection();
		return $collection;
	}
}
 Mỗi block trong M2 phải extend từ Magento\Framework\View\Element\Template. Trong block này, ta sẽ khai báo một phương thức getBlogInfo() để hiển thị chuỗi “AHT Blog module”. Ta sẽ sử dụng nó trong tập template.

 Tạo tập tin template  index.phtml
<?php

/**
 * @var \AHT\Blog\Block\Index $block
 */

echo $block->getBlogInfo();

cài đặt module trong backend
* để tạo admin module MyCompany ExampleAdminNewPage, cần phải hoàn tất các bước sau :
Bước 1 : Tạo thư mục module MyCompany
Bước 2 : tạo file etc/module.xml
Bước 3 : Tạo file etc/registration.php
Bước 4 : Kích hoạt module
Bước 5 : Tạo file routes.xml
Bước 6 : Tạo file controller
Bước 7 : Tạo View, Block, Layout, Template

Step 1: Tạo thư mục module
 app/code/MyCompany/ExampleAdminNewPage
Step 3 : Tạo file etc/module.xml
sau đó, cần phải tạo folder và thêm tập tin module.xml
app/code/MyCompany/ExampleAdminNewPage/etc/module/xml
thêm nội dung tập tin :
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Module/etc/module.xsd">
	<module name="MyCompany_ExampleAdminNewPage" setup_version="1.0.0">
	</module>
</config>
Step 3 : Thêm tập tin registration.php
trong bước này, chúng ta sẽ thêm một tệp registration.php trong thư mục ExampleAdminNewPage với nội dung :
<?php 
\Magento\Framework\Component\ComponentRegistrar::register(
	\Magento\Framework\Component\ComponentRegistrar::MODULE,
	'MyCompany_ExampleAdminNewPage',
	__DIR__	
);
Step 4 : kích hoạt module
sau bước 3 thì chúng ta đã hoàn tất việc tạo module MyCompany, và giờ sẽ kích hoạt module trong bước này, chạy lệnh :
php bin/magento module:status
bạn sẽ thấy các module đang bị vô hiệu hóa:
List of disabled modules:
MyCompany_ExampleAdminNewPage
Bạn cũng có thể sử dụng một cách khác để kích hoạt module, đi đến tập tin config.php : app\etc\config.php Bạn sẽ thấy một danh sách các module ở đó, giờ thì chỉ cần thêm module cần kích hoạt vào là xong :'MyCompany_ExampleAdminNewPage' => 1,
sau các bước này, khi bạn mở trang web của bạn trong trình duyệt, bạn sẽ nhận được một thông báo lỗi rằng : Please Upgrade your database : Run "bin/magento setup:upgrade" from magento root directory
hãy chạy lệnh : php bin/magento setup:upgrade
sau khi hoàn thành, khi bạn mở trang web của mình trong trình duyệt bạn sẽ thấy bố cục của trang web bị hỏng
Chạy lệnh:

php bin/magento setup:static-content:deploy -f

 Sau khi hoàn tất, có thể nhìn thấy module vừa tạo từ backend tại System Configuration -> Advanced -> Disable Modules Output.

Bước 5 Tạo file routes.xml
Tạo tập tin etc/adminhtml/routes.xml
nội dung :

<?xml version="1.0" ?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:App/etc/routes.xsd">
	<router id="admin">
		<route frontName="exampleadminnewpage" id="exampleadminnewpage">
			<module name="MyCompany_ExampleAdminNewPage" />
		</route>
	</router>
</config>
 Tạo tập tin etc/adminhtml/menu.xml :
<?xml version="1.0" ?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_Backend:etc/menu.xsd">
	<menu>
		<add id="MyCompany_ExampleAdminNewPage::greetings" 
			title="Greetings"
			translate="title"
			module="MyCompany_ExampleAdminNewPage"
			parent="Magento_Backend::content"
			sortOrder="50"
			dependsOnModule="MyCompany_ExampleAdminNewPage"
			resource="MyCompany_ExampleAdminNewPage::greetings"/>
		<add id="MyCompany_ExampleAdminNewPage::greetings_helloworld"
			title="Hello World"
			translate="title"
			module="MyCompany_ExampleAdminNewPage"
			parent="MyCompany_ExampleAdminNewPage::greetings"
			sortOrder="10"
			dependsOnModule="MyCompany_ExampleAdminNewPage"
			action="exampleadminnewpage/helloworld"
			resource="MyCompany_ExampleAdminNewPage::greetings"/>
	</menu>
</config>
Bước 6 Tạo controller
Tạo tập tin Controller/Adminhtml/HelloWorld/Index.php :
<?php
namespace MyCompany\ExampleAdminNewPage\Controller\Adminhtml\HelloWorld;

class Index extends \Magento\Backend\App\Action
{
	/**
	 * @var  \Magento\Framework\View\Result\PageFactory;
	 */
	protected $resultPageFactory;

	/**
	 * Constructor
	 *
	 * @param \Magento\Backend\App\Action\Context $context
	 * @param \Magento\Framework\View\Result\PageFactory $resultPageFactory
	 */

	public function __construct(
		\Magento\Backend\App\Action\Context $context,
		\Magento\Framework\View\Result\PageFactory $resultPageFactory
	)
	{
		parent::__construct($context);
		$this->resultPageFactory = $resultPageFactory;
	}

	/**
	 * Load the page definded in View/adminhtml/layout/exampleadminnewpage_helloworld_index.xml
	 * @return \Magento\Framework\View\Result\Page
	 */

	public function execute()
	{
		return $resultPage =  $this->resultPageFactory->create();
	}

}
Bước 7. Tạo View, Block, layout, tmplates
Tạo mới 2 thư mục : view/adminhtml/layout và view/adminhtml/templates
Trong thư mục layout tạo file exampleadminnewpage_helloworld_index.xml :
<?xml version="1.0" ?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:View/Layout/etc/page_configuration.xsd">
	<head>
		<title>
			Greetings
		</title>
	</head>
	<body>
		<referenceContainer name="content">
			<block class="MyCompany\ExampleAdminNewPage\Block\Adminhtml\Index" name="exampleadminnewpage_adminhmtl_index" template="MyCompany_ExampleAdminNewPage::helloworld.phtml" />
		</referenceContainer>
	</body>

</config>
Trong thư mục templates tạo file helloworld.phtml :
<p>Hello World </p>
Cuối cùng chạy lần lượt các lệnh :

php bin/magento setup:upgrade

php bin/magento setup:static-content:deploy -f

Sau khi hoàn thành các bước trên, bạn đăng nhập vào admin magento sẽ nhận được kết quả như hình :
Thêm tập tin Block/Adminhtml/Index.php với nội dung :
<?php
namespace MyCompany\ExampleAdminNewPage\Block\Adminhtml;

class Index extends \Magento\Framework\View\Element\Template
{
	public function __construct(\Magento\Framework\View\Element\Template\Contex $context)
	{
		parent::__construct($context);
	}

	public function helloWorld()
	{
		return __('Hello World !');
	}

	public function getPosts()
	{
		$post = $this->_postFactory->create();
		$collection = $post->getCollection();
		return $collection;
	}
}

?>
Để gọi được block này, sửa lại nội dung file helloworld.phtml như sau:
<?php
/**
 * @var \MyCompany\ExampleAdminNewPage\Block\Adminhtml\Index $blockHello;
 */

echo $blockHello->helloWorld();